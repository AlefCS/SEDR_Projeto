// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module mutacao (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        seed_i,
        seed_o,
        seed_o_ap_vld,
        populacao_x_V_address0,
        populacao_x_V_ce0,
        populacao_x_V_we0,
        populacao_x_V_d0,
        populacao_x_V_q0,
        populacao_y_V_address0,
        populacao_y_V_ce0,
        populacao_y_V_we0,
        populacao_y_V_d0,
        populacao_y_V_q0
);

parameter    ap_ST_fsm_state1 = 20'd1;
parameter    ap_ST_fsm_state2 = 20'd2;
parameter    ap_ST_fsm_state3 = 20'd4;
parameter    ap_ST_fsm_state4 = 20'd8;
parameter    ap_ST_fsm_state5 = 20'd16;
parameter    ap_ST_fsm_state6 = 20'd32;
parameter    ap_ST_fsm_state7 = 20'd64;
parameter    ap_ST_fsm_state8 = 20'd128;
parameter    ap_ST_fsm_state9 = 20'd256;
parameter    ap_ST_fsm_state10 = 20'd512;
parameter    ap_ST_fsm_state11 = 20'd1024;
parameter    ap_ST_fsm_state12 = 20'd2048;
parameter    ap_ST_fsm_state13 = 20'd4096;
parameter    ap_ST_fsm_state14 = 20'd8192;
parameter    ap_ST_fsm_state15 = 20'd16384;
parameter    ap_ST_fsm_state16 = 20'd32768;
parameter    ap_ST_fsm_state17 = 20'd65536;
parameter    ap_ST_fsm_state18 = 20'd131072;
parameter    ap_ST_fsm_state19 = 20'd262144;
parameter    ap_ST_fsm_state20 = 20'd524288;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] seed_i;
output  [31:0] seed_o;
output   seed_o_ap_vld;
output  [7:0] populacao_x_V_address0;
output   populacao_x_V_ce0;
output   populacao_x_V_we0;
output  [27:0] populacao_x_V_d0;
input  [27:0] populacao_x_V_q0;
output  [7:0] populacao_y_V_address0;
output   populacao_y_V_ce0;
output   populacao_y_V_we0;
output  [27:0] populacao_y_V_d0;
input  [27:0] populacao_y_V_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] seed_o;
reg seed_o_ap_vld;
reg[7:0] populacao_x_V_address0;
reg populacao_x_V_ce0;
reg populacao_x_V_we0;
reg[7:0] populacao_y_V_address0;
reg populacao_y_V_ce0;
reg populacao_y_V_we0;

(* fsm_encoding = "none" *) reg   [19:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [6:0] i_3_fu_157_p2;
reg   [6:0] i_3_reg_864;
wire    ap_CS_fsm_state2;
reg   [31:0] p_Val2_s_reg_869;
wire   [0:0] exitcond_fu_151_p2;
wire   [10:0] r_V_1_i_fu_173_p2;
reg   [10:0] r_V_1_i_reg_877;
reg   [0:0] tmp_reg_882;
wire    ap_CS_fsm_state3;
wire   [90:0] grp_fu_198_p2;
reg   [90:0] mul2_reg_893;
wire    ap_CS_fsm_state4;
reg   [18:0] tmp_25_reg_898;
wire   [18:0] tmp_7_fu_241_p3;
reg   [18:0] tmp_7_reg_904;
wire    ap_CS_fsm_state5;
reg   [0:0] tmp_29_reg_910;
wire   [10:0] r_V_1_i4_fu_270_p2;
reg   [10:0] r_V_1_i4_reg_915;
reg   [0:0] tmp_32_reg_920;
wire   [18:0] j_V_fu_289_p3;
reg   [18:0] j_V_reg_926;
wire    ap_CS_fsm_state6;
wire   [42:0] p_Val2_4_fu_315_p2;
reg   [42:0] p_Val2_4_reg_936;
wire    ap_CS_fsm_state7;
reg   [8:0] tmp_30_reg_941;
reg   [16:0] p_Result_5_reg_946;
wire   [90:0] grp_fu_306_p2;
reg   [90:0] mul_reg_951;
reg   [18:0] tmp_35_reg_956;
wire   [18:0] neg_ti_fu_409_p2;
reg   [18:0] neg_ti_reg_962;
wire    ap_CS_fsm_state8;
reg   [7:0] populacao_x_V_addr_reg_967;
reg  signed [27:0] populacao_x_V_load_reg_972;
wire    ap_CS_fsm_state9;
wire  signed [44:0] OP2_V_1_cast_cast_fu_473_p3;
reg  signed [44:0] OP2_V_1_cast_cast_reg_977;
reg   [27:0] novo_X_V_reg_982;
wire    ap_CS_fsm_state10;
wire   [10:0] r_V_1_i5_fu_530_p2;
reg   [10:0] r_V_1_i5_reg_992;
wire    ap_CS_fsm_state11;
reg   [0:0] tmp_43_reg_997;
wire   [10:0] r_V_1_i6_fu_559_p2;
reg   [10:0] r_V_1_i6_reg_1003;
reg   [0:0] tmp_49_reg_1008;
wire    ap_CS_fsm_state12;
wire   [90:0] grp_fu_595_p2;
reg   [90:0] mul1_reg_1024;
wire    ap_CS_fsm_state13;
reg   [18:0] tmp_45_reg_1029;
wire   [90:0] grp_fu_612_p2;
reg   [90:0] mul3_reg_1035;
wire   [18:0] tmp_23_fu_655_p3;
reg   [18:0] tmp_23_reg_1042;
wire    ap_CS_fsm_state14;
reg   [0:0] tmp_46_reg_1048;
wire   [0:0] icmp1_fu_732_p2;
reg   [0:0] icmp1_reg_1053;
wire   [18:0] j_V_1_fu_743_p3;
reg   [18:0] j_V_1_reg_1058;
wire    ap_CS_fsm_state15;
wire   [42:0] p_Val2_8_fu_752_p2;
reg   [42:0] p_Val2_8_reg_1063;
wire    ap_CS_fsm_state16;
reg   [8:0] tmp_47_reg_1068;
reg   [16:0] p_Result_8_reg_1073;
reg   [7:0] populacao_y_V_addr_reg_1078;
wire    ap_CS_fsm_state17;
reg  signed [27:0] populacao_y_V_load_reg_1083;
wire    ap_CS_fsm_state18;
wire  signed [44:0] OP2_V_3_cast_cast_fu_820_p3;
reg  signed [44:0] OP2_V_3_cast_cast_reg_1088;
reg   [27:0] novo_Y_V_reg_1093;
wire    ap_CS_fsm_state19;
reg   [6:0] i_reg_124;
wire    ap_CS_fsm_state20;
wire  signed [63:0] tmp_19_fu_415_p1;
wire  signed [63:0] tmp_34_fu_815_p1;
wire   [31:0] seed_assign_fu_139_p2;
wire   [31:0] tmp_28_fu_573_p2;
wire   [0:0] or_cond_fu_514_p2;
wire   [0:0] or_cond1_fu_855_p2;
wire   [10:0] rhs_V_i_fu_163_p4;
wire  signed [44:0] tmp_s_fu_187_p3;
wire   [46:0] grp_fu_198_p0;
wire   [90:0] neg_mul3_fu_214_p2;
wire   [18:0] tmp_24_fu_219_p4;
wire   [18:0] p_v_v_fu_229_p3;
wire   [18:0] neg_ti8_fu_235_p2;
wire   [31:0] p_Val2_5_fu_247_p2;
wire   [10:0] rhs_V_i4_fu_260_p4;
wire   [18:0] p_Val2_i_fu_284_p2;
wire  signed [44:0] tmp_18_fu_295_p3;
wire   [46:0] grp_fu_306_p0;
wire  signed [18:0] p_Val2_4_fu_315_p1;
wire  signed [9:0] ret_V_cast_fu_351_p1;
wire   [0:0] tmp_17_fu_361_p2;
wire   [9:0] ret_V_fu_366_p2;
wire   [0:0] tmp_31_fu_354_p3;
wire   [9:0] p_s_fu_372_p3;
wire   [90:0] neg_mul_fu_388_p2;
wire   [18:0] tmp_33_fu_393_p4;
wire   [18:0] p_v1_v_fu_403_p3;
wire   [9:0] p_8_fu_380_p3;
wire   [18:0] tmp_13_fu_420_p3;
wire   [18:0] p_Val2_i1_fu_433_p2;
wire   [0:0] tmp_37_fu_425_p3;
wire   [2:0] tmp_40_fu_439_p4;
wire   [2:0] tmp_41_fu_449_p4;
wire   [2:0] tmp_42_fu_459_p3;
wire   [0:0] icmp_fu_467_p2;
wire  signed [27:0] p_Val2_6_fu_484_p0;
wire  signed [18:0] p_Val2_6_fu_484_p1;
wire   [44:0] p_Val2_6_fu_484_p2;
wire   [0:0] tmp_20_fu_504_p2;
wire   [0:0] tmp_21_fu_509_p2;
wire   [31:0] p_Val2_7_fu_499_p2;
wire   [10:0] rhs_V_i5_fu_520_p4;
wire   [31:0] p_Val2_9_fu_544_p2;
wire   [10:0] rhs_V_i6_fu_549_p4;
wire  signed [44:0] tmp_22_fu_584_p3;
wire   [46:0] grp_fu_595_p1;
wire  signed [44:0] tmp_27_fu_601_p3;
wire   [46:0] grp_fu_612_p1;
wire   [90:0] neg_mul1_fu_628_p2;
wire   [18:0] tmp_44_fu_633_p4;
wire   [18:0] p_v2_v_fu_643_p3;
wire   [18:0] neg_ti1_fu_649_p2;
wire   [90:0] neg_mul2_fu_669_p2;
wire   [18:0] tmp_50_fu_674_p4;
wire   [18:0] tmp_51_fu_684_p4;
wire   [18:0] p_v3_v_fu_693_p3;
wire   [18:0] neg_ti2_fu_700_p2;
wire   [2:0] tmp_52_fu_706_p4;
wire   [2:0] tmp_53_fu_716_p4;
wire   [2:0] tmp_54_fu_725_p3;
wire   [18:0] p_Val2_i2_fu_738_p2;
wire  signed [18:0] p_Val2_8_fu_752_p0;
wire  signed [9:0] ret_V_5_cast_fu_778_p1;
wire   [0:0] tmp_26_fu_788_p2;
wire   [9:0] ret_V_4_fu_793_p2;
wire   [0:0] tmp_48_fu_781_p3;
wire   [9:0] p_4_fu_799_p3;
wire   [9:0] p_9_fu_807_p3;
wire  signed [18:0] p_Val2_10_fu_830_p0;
wire  signed [27:0] p_Val2_10_fu_830_p1;
wire   [44:0] p_Val2_10_fu_830_p2;
wire   [0:0] tmp_36_fu_845_p2;
wire   [0:0] tmp_38_fu_850_p2;
reg   [19:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 20'd1;
end

ga_top_mul_47ns_4cud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 47 ),
    .din1_WIDTH( 45 ),
    .dout_WIDTH( 91 ))
ga_top_mul_47ns_4cud_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_198_p0),
    .din1(tmp_s_fu_187_p3),
    .ce(1'b1),
    .dout(grp_fu_198_p2)
);

ga_top_mul_47ns_4cud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 47 ),
    .din1_WIDTH( 45 ),
    .dout_WIDTH( 91 ))
ga_top_mul_47ns_4cud_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_306_p0),
    .din1(tmp_18_fu_295_p3),
    .ce(1'b1),
    .dout(grp_fu_306_p2)
);

ga_top_mul_45s_47dEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 45 ),
    .din1_WIDTH( 47 ),
    .dout_WIDTH( 91 ))
ga_top_mul_45s_47dEe_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_22_fu_584_p3),
    .din1(grp_fu_595_p1),
    .ce(1'b1),
    .dout(grp_fu_595_p2)
);

ga_top_mul_45s_47dEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 45 ),
    .din1_WIDTH( 47 ),
    .dout_WIDTH( 91 ))
ga_top_mul_45s_47dEe_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_27_fu_601_p3),
    .din1(grp_fu_612_p1),
    .ce(1'b1),
    .dout(grp_fu_612_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        i_reg_124 <= i_3_reg_864;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_124 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        OP2_V_1_cast_cast_reg_977[17 : 1] <= OP2_V_1_cast_cast_fu_473_p3[17 : 1];
        populacao_x_V_load_reg_972 <= populacao_x_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        OP2_V_3_cast_cast_reg_1088[17 : 1] <= OP2_V_3_cast_cast_fu_820_p3[17 : 1];
        populacao_y_V_load_reg_1083 <= populacao_y_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_3_reg_864 <= i_3_fu_157_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        icmp1_reg_1053 <= icmp1_fu_732_p2;
        tmp_23_reg_1042 <= tmp_23_fu_655_p3;
        tmp_46_reg_1048 <= tmp_23_fu_655_p3[32'd18];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        j_V_1_reg_1058 <= j_V_1_fu_743_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        j_V_reg_926 <= j_V_fu_289_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        mul1_reg_1024 <= grp_fu_595_p2;
        mul3_reg_1035 <= grp_fu_612_p2;
        tmp_45_reg_1029 <= {{grp_fu_595_p2[90:72]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        mul2_reg_893 <= grp_fu_198_p2;
        tmp_25_reg_898 <= {{grp_fu_198_p2[90:72]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        mul_reg_951 <= grp_fu_306_p2;
        p_Result_5_reg_946 <= {{p_Val2_4_fu_315_p2[33:17]}};
        p_Val2_4_reg_936 <= p_Val2_4_fu_315_p2;
        tmp_30_reg_941 <= {{p_Val2_4_fu_315_p2[42:34]}};
        tmp_35_reg_956 <= {{grp_fu_306_p2[90:72]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (tmp_32_reg_920 == 1'd1))) begin
        neg_ti_reg_962 <= neg_ti_fu_409_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        novo_X_V_reg_982 <= {{p_Val2_6_fu_484_p2[44:17]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        novo_Y_V_reg_1093 <= {{p_Val2_10_fu_830_p2[44:17]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        p_Result_8_reg_1073 <= {{p_Val2_8_fu_752_p2[33:17]}};
        p_Val2_8_reg_1063[42 : 20] <= p_Val2_8_fu_752_p2[42 : 20];
        tmp_47_reg_1068 <= {{p_Val2_8_fu_752_p2[42:34]}};
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_151_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        p_Val2_s_reg_869 <= seed_i;
        r_V_1_i_reg_877 <= r_V_1_i_fu_173_p2;
        tmp_reg_882 <= r_V_1_i_fu_173_p2[32'd10];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        populacao_x_V_addr_reg_967 <= tmp_19_fu_415_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        populacao_y_V_addr_reg_1078 <= tmp_34_fu_815_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        r_V_1_i4_reg_915 <= r_V_1_i4_fu_270_p2;
        tmp_29_reg_910 <= tmp_7_fu_241_p3[32'd18];
        tmp_32_reg_920 <= r_V_1_i4_fu_270_p2[32'd10];
        tmp_7_reg_904 <= tmp_7_fu_241_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        r_V_1_i5_reg_992 <= r_V_1_i5_fu_530_p2;
        r_V_1_i6_reg_1003 <= r_V_1_i6_fu_559_p2;
        tmp_43_reg_997 <= r_V_1_i5_fu_530_p2[32'd10];
        tmp_49_reg_1008 <= r_V_1_i6_fu_559_p2[32'd10];
    end
end

always @ (*) begin
    if ((((exitcond_fu_151_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_fu_151_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        populacao_x_V_address0 = populacao_x_V_addr_reg_967;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        populacao_x_V_address0 = tmp_19_fu_415_p1;
    end else begin
        populacao_x_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8))) begin
        populacao_x_V_ce0 = 1'b1;
    end else begin
        populacao_x_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond_fu_514_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        populacao_x_V_we0 = 1'b1;
    end else begin
        populacao_x_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        populacao_y_V_address0 = populacao_y_V_addr_reg_1078;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        populacao_y_V_address0 = tmp_34_fu_815_p1;
    end else begin
        populacao_y_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state17))) begin
        populacao_y_V_ce0 = 1'b1;
    end else begin
        populacao_y_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond1_fu_855_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        populacao_y_V_we0 = 1'b1;
    end else begin
        populacao_y_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        seed_o = tmp_28_fu_573_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        seed_o = seed_assign_fu_139_p2;
    end else begin
        seed_o = seed_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        seed_o_ap_vld = 1'b1;
    end else begin
        seed_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond_fu_151_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OP2_V_1_cast_cast_fu_473_p3 = ((icmp_fu_467_p2[0:0] === 1'b1) ? 45'd128451 : 45'd133693);

assign OP2_V_3_cast_cast_fu_820_p3 = ((icmp1_reg_1053[0:0] === 1'b1) ? 45'd128451 : 45'd133693);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign exitcond_fu_151_p2 = ((i_reg_124 == 7'd100) ? 1'b1 : 1'b0);

assign grp_fu_198_p0 = 91'd35185059443828;

assign grp_fu_306_p0 = 91'd35185059443828;

assign grp_fu_595_p1 = 91'd35185059443828;

assign grp_fu_612_p1 = 91'd35185059443828;

assign i_3_fu_157_p2 = (i_reg_124 + 7'd1);

assign icmp1_fu_732_p2 = (($signed(tmp_54_fu_725_p3) < $signed(3'd1)) ? 1'b1 : 1'b0);

assign icmp_fu_467_p2 = (($signed(tmp_42_fu_459_p3) < $signed(3'd1)) ? 1'b1 : 1'b0);

assign j_V_1_fu_743_p3 = ((tmp_46_reg_1048[0:0] === 1'b1) ? p_Val2_i2_fu_738_p2 : tmp_23_reg_1042);

assign j_V_fu_289_p3 = ((tmp_29_reg_910[0:0] === 1'b1) ? p_Val2_i_fu_284_p2 : tmp_7_reg_904);

assign neg_mul1_fu_628_p2 = (91'd0 - mul1_reg_1024);

assign neg_mul2_fu_669_p2 = (91'd0 - mul3_reg_1035);

assign neg_mul3_fu_214_p2 = (91'd0 - mul2_reg_893);

assign neg_mul_fu_388_p2 = (91'd0 - mul_reg_951);

assign neg_ti1_fu_649_p2 = (19'd0 - p_v2_v_fu_643_p3);

assign neg_ti2_fu_700_p2 = (19'd0 - p_v3_v_fu_693_p3);

assign neg_ti8_fu_235_p2 = (19'd0 - p_v_v_fu_229_p3);

assign neg_ti_fu_409_p2 = (19'd0 - p_v1_v_fu_403_p3);

assign or_cond1_fu_855_p2 = (tmp_38_fu_850_p2 | tmp_36_fu_845_p2);

assign or_cond_fu_514_p2 = (tmp_21_fu_509_p2 | tmp_20_fu_504_p2);

assign p_4_fu_799_p3 = ((tmp_26_fu_788_p2[0:0] === 1'b1) ? ret_V_5_cast_fu_778_p1 : ret_V_4_fu_793_p2);

assign p_8_fu_380_p3 = ((tmp_31_fu_354_p3[0:0] === 1'b1) ? p_s_fu_372_p3 : ret_V_cast_fu_351_p1);

assign p_9_fu_807_p3 = ((tmp_48_fu_781_p3[0:0] === 1'b1) ? p_4_fu_799_p3 : ret_V_5_cast_fu_778_p1);

assign p_Val2_10_fu_830_p0 = OP2_V_3_cast_cast_reg_1088;

assign p_Val2_10_fu_830_p1 = populacao_y_V_load_reg_1083;

assign p_Val2_10_fu_830_p2 = ($signed(p_Val2_10_fu_830_p0) * $signed(p_Val2_10_fu_830_p1));

assign p_Val2_4_fu_315_p1 = j_V_reg_926;

assign p_Val2_4_fu_315_p2 = ($signed({{1'b0}, {43'd26214400}}) * $signed(p_Val2_4_fu_315_p1));

assign p_Val2_5_fu_247_p2 = (32'd5000000 + p_Val2_s_reg_869);

assign p_Val2_6_fu_484_p0 = populacao_x_V_load_reg_972;

assign p_Val2_6_fu_484_p1 = OP2_V_1_cast_cast_reg_977;

assign p_Val2_6_fu_484_p2 = ($signed(p_Val2_6_fu_484_p0) * $signed(p_Val2_6_fu_484_p1));

assign p_Val2_7_fu_499_p2 = (32'd10000000 + p_Val2_s_reg_869);

assign p_Val2_8_fu_752_p0 = j_V_1_reg_1058;

assign p_Val2_8_fu_752_p2 = ($signed(p_Val2_8_fu_752_p0) * $signed('h1900000));

assign p_Val2_9_fu_544_p2 = (p_Val2_s_reg_869 + 32'd15000000);

assign p_Val2_i1_fu_433_p2 = (19'd0 - tmp_13_fu_420_p3);

assign p_Val2_i2_fu_738_p2 = (19'd0 - tmp_23_reg_1042);

assign p_Val2_i_fu_284_p2 = (19'd0 - tmp_7_reg_904);

assign p_s_fu_372_p3 = ((tmp_17_fu_361_p2[0:0] === 1'b1) ? ret_V_cast_fu_351_p1 : ret_V_fu_366_p2);

assign p_v1_v_fu_403_p3 = ((tmp_32_reg_920[0:0] === 1'b1) ? tmp_33_fu_393_p4 : tmp_35_reg_956);

assign p_v2_v_fu_643_p3 = ((tmp_43_reg_997[0:0] === 1'b1) ? tmp_44_fu_633_p4 : tmp_45_reg_1029);

assign p_v3_v_fu_693_p3 = ((tmp_49_reg_1008[0:0] === 1'b1) ? tmp_50_fu_674_p4 : tmp_51_fu_684_p4);

assign p_v_v_fu_229_p3 = ((tmp_reg_882[0:0] === 1'b1) ? tmp_24_fu_219_p4 : tmp_25_reg_898);

assign populacao_x_V_d0 = novo_X_V_reg_982;

assign populacao_y_V_d0 = novo_Y_V_reg_1093;

assign r_V_1_i4_fu_270_p2 = (11'd980 - rhs_V_i4_fu_260_p4);

assign r_V_1_i5_fu_530_p2 = (11'd980 - rhs_V_i5_fu_520_p4);

assign r_V_1_i6_fu_559_p2 = (11'd980 - rhs_V_i6_fu_549_p4);

assign r_V_1_i_fu_173_p2 = (11'd980 - rhs_V_i_fu_163_p4);

assign ret_V_4_fu_793_p2 = ($signed(ret_V_5_cast_fu_778_p1) + $signed(10'd1));

assign ret_V_5_cast_fu_778_p1 = $signed(tmp_47_reg_1068);

assign ret_V_cast_fu_351_p1 = $signed(tmp_30_reg_941);

assign ret_V_fu_366_p2 = ($signed(10'd1) + $signed(ret_V_cast_fu_351_p1));

assign rhs_V_i4_fu_260_p4 = {{p_Val2_5_fu_247_p2[11:1]}};

assign rhs_V_i5_fu_520_p4 = {{p_Val2_7_fu_499_p2[11:1]}};

assign rhs_V_i6_fu_549_p4 = {{p_Val2_9_fu_544_p2[11:1]}};

assign rhs_V_i_fu_163_p4 = {{seed_i[11:1]}};

assign seed_assign_fu_139_p2 = (seed_i + 32'd5000000);

assign tmp_13_fu_420_p3 = ((tmp_32_reg_920[0:0] === 1'b1) ? neg_ti_reg_962 : tmp_35_reg_956);

assign tmp_17_fu_361_p2 = ((p_Result_5_reg_946 == 17'd0) ? 1'b1 : 1'b0);

assign tmp_18_fu_295_p3 = {{r_V_1_i4_reg_915}, {34'd0}};

assign tmp_19_fu_415_p1 = $signed(p_8_fu_380_p3);

assign tmp_20_fu_504_p2 = (($signed(novo_X_V_reg_982) > $signed(28'd655360)) ? 1'b1 : 1'b0);

assign tmp_21_fu_509_p2 = (($signed(novo_X_V_reg_982) < $signed(28'd267780096)) ? 1'b1 : 1'b0);

assign tmp_22_fu_584_p3 = {{r_V_1_i5_reg_992}, {34'd0}};

assign tmp_23_fu_655_p3 = ((tmp_43_reg_997[0:0] === 1'b1) ? neg_ti1_fu_649_p2 : tmp_45_reg_1029);

assign tmp_24_fu_219_p4 = {{neg_mul3_fu_214_p2[90:72]}};

assign tmp_26_fu_788_p2 = ((p_Result_8_reg_1073 == 17'd0) ? 1'b1 : 1'b0);

assign tmp_27_fu_601_p3 = {{r_V_1_i6_reg_1003}, {34'd0}};

assign tmp_28_fu_573_p2 = (p_Val2_s_reg_869 + 32'd20000000);

assign tmp_31_fu_354_p3 = p_Val2_4_reg_936[32'd42];

assign tmp_33_fu_393_p4 = {{neg_mul_fu_388_p2[90:72]}};

assign tmp_34_fu_815_p1 = $signed(p_9_fu_807_p3);

assign tmp_36_fu_845_p2 = (($signed(novo_Y_V_reg_1093) > $signed(28'd655360)) ? 1'b1 : 1'b0);

assign tmp_37_fu_425_p3 = tmp_13_fu_420_p3[32'd18];

assign tmp_38_fu_850_p2 = (($signed(novo_Y_V_reg_1093) < $signed(28'd267780096)) ? 1'b1 : 1'b0);

assign tmp_40_fu_439_p4 = {{p_Val2_i1_fu_433_p2[18:16]}};

assign tmp_41_fu_449_p4 = {{tmp_13_fu_420_p3[18:16]}};

assign tmp_42_fu_459_p3 = ((tmp_37_fu_425_p3[0:0] === 1'b1) ? tmp_40_fu_439_p4 : tmp_41_fu_449_p4);

assign tmp_44_fu_633_p4 = {{neg_mul1_fu_628_p2[90:72]}};

assign tmp_48_fu_781_p3 = p_Val2_8_reg_1063[32'd42];

assign tmp_50_fu_674_p4 = {{neg_mul2_fu_669_p2[90:72]}};

assign tmp_51_fu_684_p4 = {{mul3_reg_1035[90:72]}};

assign tmp_52_fu_706_p4 = {{neg_ti2_fu_700_p2[18:16]}};

assign tmp_53_fu_716_p4 = {{mul3_reg_1035[90:88]}};

assign tmp_54_fu_725_p3 = ((tmp_49_reg_1008[0:0] === 1'b1) ? tmp_52_fu_706_p4 : tmp_53_fu_716_p4);

assign tmp_7_fu_241_p3 = ((tmp_reg_882[0:0] === 1'b1) ? neg_ti8_fu_235_p2 : tmp_25_reg_898);

assign tmp_s_fu_187_p3 = {{r_V_1_i_reg_877}, {34'd0}};

always @ (posedge ap_clk) begin
    OP2_V_1_cast_cast_reg_977[0] <= 1'b1;
    OP2_V_1_cast_cast_reg_977[44:18] <= 27'b000000000000000000000000000;
    p_Val2_8_reg_1063[19:0] <= 20'b00000000000000000000;
    OP2_V_3_cast_cast_reg_1088[0] <= 1'b1;
    OP2_V_3_cast_cast_reg_1088[44:18] <= 27'b000000000000000000000000000;
end

endmodule //mutacao
